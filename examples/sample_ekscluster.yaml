# // Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
# // SPDX-License-Identifier: MIT-0
apiVersion: eksctl.io/v1alpha5
kind: ClusterConfig
metadata:
  name: eks-nvme
  region: us-east-1
  version: "1.21"
vpc:
  clusterEndpoints:
      publicAccess: true
      privateAccess: true  
availabilityZones: ["us-east-1a","us-east-1b"]   
iam:
  withOIDC: true
  serviceAccounts:
  - metadata:
      name: cluster-autoscaler
      namespace: kube-system
      labels: {aws-usage: "cluster-ops"}
    wellKnownPolicies:
      autoScaler: true
    roleName: eksctl-cluster-autoscaler-role
  - metadata:
      name: oss
      namespace: oss
      labels: {aws-usage: "application"}
    attachPolicyARNs:
    - arn:aws:iam::123456789:policy/emr-on-eks-test-policy
#   - metadata:
#       name: ebs-csi-controller-sa
#       namespace: kube-system
#       labels: {aws-usage: "cluster-ops"}
#     wellKnownPolicies:   
#       ebsCSIController: true
#     roleName: eksctl-ebs-csi-role      
# addons: 
# # ebs csi consideration 
# # https://docs.aws.amazon.com/eks/latest/userguide/managing-ebs-csi.html
#   - name: aws-ebs-csi-driver
#     version: latest
#     serviceAccountRoleARN: arn:aws:iam::${ACCOUNTID}:role/eksctl-ebs-csi-role

managedNodeGroups: 
  - name: mn-od
    availabilityZones: ["us-east-1a"] 
    preBootstrapCommands:
      - "mkfs.xfs /dev/nvme1n1;mkdir -p /local1;echo /dev/nvme1n1 /local1 xfs defaults,noatime 1 2 >> /etc/fstab;"
      - "mount -a"
      - "chown ec2-user:ec2-user /local1"
    instanceType: c5d.9xlarge
    # ebs optimization is enabled by default
    volumeSize: 20
    volumeType: gp2
    minSize: 1
    desiredCapacity: 1
    maxSize: 30
    labels:
      app: sparktest 
    tags:
      # required for cluster-autoscaler auto-discovery
      k8s.io/cluster-autoscaler/enabled: "true"
      k8s.io/cluster-autoscaler/eks-nvme: "owned"  

# enable all of the control plane logs
cloudWatch:
 clusterLogging:
   enableTypes: ["*"]